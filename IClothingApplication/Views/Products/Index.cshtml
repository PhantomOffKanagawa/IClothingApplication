@model IEnumerable<IClothingApplication.Models.Product>

@{
    ViewBag.Title = "Index";
}

<h2>Products</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

@*<p>
        @ViewBag.filter
        @ViewBag.searchString
    </p>*@

@if (ViewBag.filter != null)
{
    <br />
    <h4>
        Filtering by @ViewBag.filterType: @ViewBag.filter
    </h4>
}

<br />

@using (Html.BeginForm())
{
    <nav class="navbar navbar-expand-lg navbar-light p-2 mb-1">
        @Html.TextBox("SearchString", "", new { @class = "form-control me-sm-2", @placeholder = "Search Items By Name" })
        <input type="submit" value="Search" class="btn btn-outline-success my-2 my-sm-0" />
    </nav>
}


@*Filter Drop-Downs*@
@using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Department", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
{
    <div class="input-group mb-2">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-default">Department</span>
        </div>
        @Html.DropDownList("filter", ViewBag.Collections_Departments as SelectList, "Select Department", new { @class = "form-control" })
        <div class="input-group-append">
            <input type="submit" value="Filter" class="btn btn-outline-secondary" />
        </div>
    </div>
}
@using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Category", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
{
    <div class="input-group mb-2">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-default">Category</span>
        </div>
        @Html.DropDownList("filter", ViewBag.Collections_Categories as SelectList, "Select Category", new { @class = "form-control" })
        <div class="input-group-append">
            <input type="submit" value="Filter" class="btn btn-outline-secondary" />
        </div>
    </div>
}
@using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Brand", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
{
    <div class="input-group mb-2">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-default">Brand</span>
        </div>
        @Html.DropDownList("filter", ViewBag.Collections_Brands as SelectList, "Select Brand", new { @class = "form-control" })
        <div class="input-group-append">
            <input type="submit" value="Filter" class="btn btn-outline-secondary" />
        </div>
    </div>
}

<br />

@{const int maxLength = 90;}

<div class="container">
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3">
        @foreach (var item in Model)
        {
            <div class="col mb-4">
                <div class="card" style="min-height: 500px">
                    <img src="~/Images/placeholder.jpg" class="card-img-top" alt="Card Image"> @*@item.productName + ".jpg"*@
                    <div class="card-body d-grid">
                        <h5 class="card-title">@Html.ActionLink(item.productName, "Details", new { id = item.productID }, new { @class = "text-dark" })</h5>
                        <p class="card-text">@(item.productDescription.Length > maxLength ? item.productDescription.Substring(0, maxLength) + "..." : item.productDescription)</p>

                        <div class="d-grid" style="height: min-content; align-self: end;">
                            <div class="d-flex justify-content-between align-items-end p-1" style="height:min-content">
                                <span class="badge rounded-pill bg-secondary">@item.Category.categoryName</span>
                                <span class="badge rounded-pill bg-secondary">@item.Brand.brandName</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-end p-1" style="height:min-content">
                                <span class="badge rounded-pill bg-success">$@item.productPrice</span>
                                @if (item.productQty != 0)
                                {
                                    <span class="badge rounded-pill bg-primary">@item.productQty In Stock</span>
                                }
                                else
                                {
                                    <span class="badge rounded-pill bg-warning">Out Of Stock</span>
                                }
                            </div>
                            @if (Session["UserType"] == "admin")
                            {
                                @Html.ActionLink("Edit", "Edit", new { id = item.productID }, new { @class = "btn btn-secondary mt-2" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.productID }, new { @class = "btn btn-secondary mt-2" })
                            }
                            @*@Html.ActionLink("Details", "Details", new { id = item.productID }, new { @class = "text-dark" })*@
                            @if (Session["UserType"] != "admin")
                            {
                                @Html.ActionLink("Add To Cart", "Add", new { id = item.productID }, new { @class = "btn btn-primary mt-2" })
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>