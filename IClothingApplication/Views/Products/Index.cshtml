@model IEnumerable<IClothingApplication.Models.Product>

@{
    ViewBag.Title = "Index";
}

<h1 class="text-center mt-3">Products</h1>

@if (ViewBag.filter != null)
{
    <h2>
        @ViewBag.filterType: @ViewBag.filter
    </h2>
    <h3>
        @ViewBag.description
    </h3>
}

<br />



<br />

<div class="pt-1 sticky-top bg-white" style="">
    <div class="d-flex justify-content-between align-items-end p-1 mt-2 align-items-center" style="height:min-content">
        <a class="h6 text-dark" data-bs-toggle="collapse" href="#filterCollapse" role="button" aria-expanded="false" aria-controls="filterCollapse">
            Filters
        </a>
        @using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filter = ViewBag.filter, filterType = ViewBag.filterType, changeSort = false }, FormMethod.Post, new { @class = "flex-grow-1 px-5" }))
        {
            <nav class="navbar navbar-expand p-0">
                @Html.TextBox("SearchString", "", new { @class = "form-control me-sm-2", @placeholder = "Search Items By Name" })
                <input type="submit" value="Search" class="btn btn-outline-success my-2 my-sm-0" />
            </nav>
        }

        <h6>@Model.Count() @(Model.Count() == 1 ? "Product" : "Products")</h6>
    </div>

    <div class="collapse in" id="filterCollapse">
        @*Filter Drop-Downs*@
        @using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Department", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
        {
            <div class="form-floating mb-2 mt-2">
                @*<div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroup-sizing-default">Department</span>
                    </div>*@
                @Html.DropDownList("filter", ViewBag.Collections_Departments as SelectList, "Select Department", new { @class = "form-control form-select", @onchange = @"form.submit();", @id = "departmentFilter" })
                @*<div class="input-group-append">
                        <input type="submit" value="Filter" class="btn btn-outline-secondary" />
                    </div>*@
                <label for="departmentFilter">Departments</label>
            </div>
        }
        @using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Category", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
        {
            <div class="form-floating mb-2">
                @*<div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroup-sizing-default">Category</span>
                    </div>*@
                @Html.DropDownList("filter", ViewBag.Collections_Categories as SelectList, "Select Category", new { @class = "form-control form-select", @onchange = @"form.submit();", @id = "categoryFilter" })
                @*<div class="input-group-append">
                        <input type="submit" value="Filter" class="btn btn-outline-secondary" />
                    </div>*@
                <label for="categoryFilter">Departments</label>
            </div>
        }
        @using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Brand", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
        {
            <div class="form-floating mb-2">
                @*<div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroup-sizing-default">Brand</span>
                    </div>*@
                @Html.DropDownList("filter", ViewBag.Collections_Brands as SelectList, "Select Brand", new { @class = "form-control form-select", @onchange = @"form.submit();", @id = "brandFilter" })
                @*<div class="input-group-append">
                        <input type="submit" value="Filter" class="btn btn-outline-secondary" />
                    </div>*@
                <label for="brandFilter">Departments</label>
            </div>
        }
    </div>

    <table class="table border-0 mb-0" style="height:min-content">
        <tr class="text-center">
            <th class="border-0" style="width: 20%">
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, filter = ViewBag.filter, filterType = ViewBag.filterType, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
                @(ViewBag.sortOrder == null ? "▼" : ViewBag.sortOrder == "name_desc" ? "▲" : "")
            </th>
            <th class="border-0" style="width: 20%">
                @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, filter = ViewBag.filter, filterType = ViewBag.filterType, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
                @(ViewBag.sortOrder == "Price" ? "▲" : ViewBag.sortOrder == "price_desc" ? "▼" : "")
            </th>
            <th class="border-0" style="width: 20%">
                @Html.ActionLink("Quantity", "Index", new { sortOrder = ViewBag.QuantitySortParm, filter = ViewBag.filter, filterType = ViewBag.filterType, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
                @(ViewBag.sortOrder == "Quantity" ? "▲" : ViewBag.sortOrder == "quantity_desc" ? "▼" : "")
            </th>
            <th class="border-0" style="width: 20%">
                @Html.ActionLink("Brand", "Index", new { sortOrder = ViewBag.BrandSortParm, filter = ViewBag.filter, filterType = ViewBag.filterType, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
                @(ViewBag.sortOrder == "Brand" ? "▲" : ViewBag.sortOrder == "brand_desc" ? "▼" : "")
            </th>
            <th class="border-0" style="width: 20%">
                @Html.ActionLink("Category", "Index", new { sortOrder = ViewBag.CategorySortParm, filter = ViewBag.filter, filterType = ViewBag.filterType, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
                @(ViewBag.sortOrder == "Category" ? "▲" : ViewBag.sortOrder == "category_desc" ? "▼" : "")
            </th>
        </tr>
    </table>
    <hr style="height: min-content" class="mt-0 mb-3" />
</div>


@{const int maxLength = 60;}

<div class="container">
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3">
        @if (Model.Count() == 0)
        {
            <h3 class="mt-4 mx-auto text-center" style="font-weight:100">No Items Found</h3>
        }
        @foreach (var item in Model)
        {
            <div class="col mb-4">
                <div class="card" style="height: 700px">
                    <img style="height: 450px; object-fit: cover; border-radius: var(--bs-card-inner-border-radius) 0 0 var(--bs-card-inner-border-radius)" src="~/Images/@(System.IO.File.Exists(Server.MapPath("~/Images/Products/" + item.productName + ".jpg")) ? "Products/" + item.productName + ".jpg" : "placeholder.jpg")" class="card-img-top" alt="Card Image">
                    <div class="card-body d-grid">
                        @*<h5 class="card-title">@Html.ActionLink(item.productName, "Details", new { id = item.productID }, new { @class = "text-dark" })</h5>*@
                        <h5 class="card-title"><a class="detailsButton text-dark" href="#;" data-id=@item.productID>@item.productName</a></h5>
                        <p class="card-text">@(item.productDescription.Length > maxLength ? item.productDescription.Substring(0, maxLength) + "..." : item.productDescription)</p>

                        <div class="d-grid" style="height: min-content; align-self: end;">
                            <div class="d-flex justify-content-between align-items-end p-1" style="height:min-content">
                                <span class="badge rounded-pill bg-secondary">@item.Category.categoryName</span>
                                <span class="badge rounded-pill bg-secondary">@item.Brand.brandName</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-end p-1" style="height:min-content">
                                <span class="badge rounded-pill bg-success">$@item.productPrice</span>
                                @if (item.productQty != 0)
                                {
                                    <span class="badge rounded-pill bg-primary">@item.productQty In Stock</span>
                                }
                                else
                                {
                                    <span class="badge rounded-pill bg-warning">Out Of Stock</span>
                                }
                            </div>
                            @if (Session["UserType"] == "admin")
                            {
                                @Html.ActionLink("Edit", "Edit", new { id = item.productID }, new { @class = "btn btn-secondary mt-2" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.productID }, new { @class = "btn btn-secondary mt-2" })
                            }
                            @*@Html.ActionLink("Details", "Details", new { id = item.productID }, new { @class = "text-dark" })*@
                            @if (Session["UserType"] != "admin")
                            {
                                <button class="addToCartButton btn btn-primary mt-2" data-id=@item.productID>Add To Cart</button>
                                @*@Html.ActionLink("Add To Cart", "Add", new { id = item.productID, sortOrder = ViewBag.sortOrder, filter = ViewBag.filter, filterType = ViewBag.filterType, searchString = ViewBag.searchString, changeSort = false }, new { @class = "btn btn-primary mt-2" })*@
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@* Add to cart code *@

<script>
    window.onload = function () {
        $('.addToCartButton').click(function () {
            $.ajax({
                url: '@Url.Action("Add", "Products")',
                type: 'POST',
                data: { id: $(this).data("id") },
                success: function (result) {
                    $('#modal-body').html(result.Message);
                    $('#staticBackdrop').modal('show');
                }
            });
        });

        $('.detailsButton').click(function () {
            $.ajax({
                url: '@Url.Action("Details", "Products")',
                type: 'POST',
                data: { id: $(this).data("id") },
                success: function (result) {
                    $('#productModalLabel').html(result.name);
                    $('#modal-image').attr('src', "../Images/" + result.imageSrc);
                    $('#product-modal-name').html(result.name);
                    $('#product-modal-description').html(result.description);
                    $('#product-modal-price').html("$" + result.price);
                    $('#product-modal-qty').html(result.qty);
                    $('#product-modal-brand').html(result.brand);
                    $('#product-modal-category').html(result.category);
                    $('#product-modal-category').html(result.category);
                    $('#productModalButton').data("id", result.id);
                    $('#productModal').modal('show');
                }
            });
        });

        $(document).click(function (event) {
            var clickover = $(event.target);
            var _opened = $(".collapse").hasClass("collapse show");
            console.log(clickover.parents('.sticky-top').length);
            if (_opened === true && clickover.parents('.sticky-top').length == 0) {
                $(".collapse").collapse('hide');
            }
        });
    };
</script>

<!-- Modal -->
<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="card mx-auto my-4 modal-content">
            <div class="row no-gutters">
                <div class="col-md-4">
                    <img id="modal-image" src="" class="card-img" alt="Card Image">
                </div>
                <div class="col-md-8 justify-content-center row">
                    <div class="card-body">
                        <h4 class="card-title" style="height:min-content"><span id="product-modal-name"></span></h4>
                        <hr style="height:min-content">
                        <p class="card-text" style="height:min-content">
                            <strong>Description:</strong> <span id="product-modal-description"></span><br>
                            <strong>Price:</strong> <span id="product-modal-price"></span><br>
                            <strong>Quantity:</strong> <span id="product-modal-qty"></span><br>
                            <strong>Brand:</strong> <span id="product-modal-brand"></span><br>
                            <strong>Category:</strong> <span id="product-modal-category"></span>
                        </p>
                        <div style="height:max-content"> </div>
                    </div>
                    <div class="align-self-end row">
                        <button id="productModalButton" class="addToCartButton btn btn-primary mb-2" style="height:min-content" data-id=-1>Add To Cart</button>
                        @if (Session["UserType"] != null && Session["UserType"].ToString() == "admin")
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = 1 }, new { @class = "btn btn-secondary mb-2 align-self-end" })
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
