@model IEnumerable<IClothingApplication.Models.Product>

@{
    ViewBag.Title = "Index";
}

<h2>Products</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

@*<p>
        @ViewBag.filter
        @ViewBag.searchString
    </p>*@

@if (ViewBag.filter != null)
{
    <br />
    <h4>
        Filtering by @ViewBag.filterType: @ViewBag.filter
    </h4>
}

<br />

@using (Html.BeginForm())
{
    <nav class="navbar navbar-expand-lg navbar-light p-2 mb-1">
        @Html.TextBox("SearchString", "", new { @class = "form-control me-sm-2", @placeholder = "Search Items By Name" })
        <input type="submit" value="Search" class="btn btn-outline-success my-2 my-sm-0" />
    </nav>
}


@*Filter Drop-Downs*@
@using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Department", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
{
    <div class="input-group mb-2">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-default">Department</span>
        </div>
        @Html.DropDownList("filter", ViewBag.Collections_Departments as SelectList, "Select Department", new { @class = "form-control" })
        <div class="input-group-append">
            <input type="submit" value="Filter" class="btn btn-outline-secondary" />
        </div>
    </div>
}
@using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Category", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
{
    <div class="input-group mb-2">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-default">Category</span>
        </div>
        @Html.DropDownList("filter", ViewBag.Collections_Categories as SelectList, "Select Category", new { @class = "form-control" })
        <div class="input-group-append">
            <input type="submit" value="Filter" class="btn btn-outline-secondary" />
        </div>
    </div>
}
@using (Html.BeginForm("Index", "Products", new { sortOrder = ViewBag.sortOrder, filterType = "Brand", searchString = ViewBag.searchString, changeSort = false }, FormMethod.Post, new { id = "brandSelectForm" }))
{
    <div class="input-group mb-2">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-default">Brand</span>
        </div>
        @Html.DropDownList("filter", ViewBag.Collections_Brands as SelectList, "Select Brand", new { @class = "form-control" })
        <div class="input-group-append">
            <input type="submit" value="Filter" class="btn btn-outline-secondary" />
        </div>
    </div>
}

<br />

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, filter = ViewBag.filter, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })

        </th>
        <th>
            @Html.DisplayNameFor(model => model.productDescription)
        </th>
        <th>
            @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, filter = ViewBag.filter, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
        </th>
        <th>
            @Html.ActionLink("Quantity", "Index", new { sortOrder = ViewBag.QuantitySortParm, filter = ViewBag.filter, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
        </th>
        <th>
            @Html.ActionLink("Brand", "Index", new { sortOrder = ViewBag.BrandSortParm, filter = ViewBag.filter, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
        </th>
        <th>
            @Html.ActionLink("Category", "Index", new { sortOrder = ViewBag.CategorySortParm, filter = ViewBag.filter, searchString = ViewBag.searchString, changeSort = true }, new { @class = "text-dark" })
        </th>
        <th>

        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.productName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.productDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.productPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.productQty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand.brandName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.categoryName)
            </td>
            <td>
                @if (Session["UserType"] == "admin")
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.productID }, new { @class = "text-dark" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.productID }, new { @class = "text-dark" })
                }
                @*@Html.ActionLink("Details", "Details", new { id = item.productID }, new { @class = "text-dark" })*@
                @if (Session["UserType"] != "admin")
                {
                    @Html.ActionLink("Add To Cart", "Add", new { id = item.productID }, new { @class = "text-dark" })
                }
            </td>
        </tr>
    }

</table>
