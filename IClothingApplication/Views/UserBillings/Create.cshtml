@model IClothingApplication.Models.UserBilling

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>UserBilling</h4>
    <hr />
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    @if (Session["UserType"] == "customer")
    {
        <div class="form-group">
            <input class="" id="customerID" name="customerID" type="hidden" value="@ViewBag.customerIDVal">
            <input class="" id="cartID" name="cartID" type="hidden" value>
            <input data-val="true" data-val-date="The field Billing Date must be a date." id="billingDate" name="billingDate" type="hidden" value>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.customerID, "customerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    int? nullableCustomerID = ViewBag.customerIDValue as int?;
                }
                @Html.DropDownList("customerID", null, "Select Customer", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.customerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cartID, "cartID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    int? nullableCartID = ViewBag.cartIDValue as int?;
                }
                @Html.DropDownList("cartID", null, "Select Cart", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cartID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.billingDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.billingDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.billingDate, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.cardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cardNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cardNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.expirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.expirationDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.expirationDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cvv, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cvv, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cvv, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
